{"version":3,"sources":["todos/actions.js","todos/views/addTodo.js","todos/actionTypes.js","todos/views/todoItem.js","constants.js","todos/views/todoList.js","todos/views/todos.js","filter/views/link.js","filter/actions.js","filter/actionTypes.js","filter/views/filters.js","TodoApp.js","Store.js","todos/reducer.js","filter/reducer.js","index.js"],"names":["nextTodoId","AddTodo","onSubmit","event","preventDefault","input","_this","value","trim","props","onAdd","refInput","node","react_default","a","createElement","className","this","placeholder","ref","type","Component","connect","dispatch","text","completed","id","addTodo","TodoItem","style","textDecoration","onClick","onToggle","onRemove","FilterTypes","selectTodos","todos","filterType","filter","item","Error","state","onToggleTodo","toggleTodo","onRemoveTodo","removeTodo","map","todoItem","key","views_todos","views_addTodo","todoList","ownProps","active","children","e","Filters","views_link","TodoApp","filters","reducer","combineReducers","arguments","length","undefined","action","concat","Object","toConsumableArray","console","log","objectSpread","createStore","ReactDOM","render","es","store","src_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.384b4454.chunk.js","sourcesContent":["import * as ActionTypes from './actionTypes.js';\r\n\r\nlet nextTodoId = 0;\r\n\r\nexport const addTodo = (text) =>({\r\n  type: ActionTypes.ADD_TODO,\r\n  completed: false,\r\n  id: nextTodoId++,\r\n  text: text\r\n})\r\n\r\n\r\nexport const toggleTodo = (id)=>({\r\n  type: ActionTypes.TOGGLE_TODO,\r\n  id: id\r\n})\r\n\r\nexport const removeTodo = (id)=>({\r\n  type: ActionTypes.REMOVE_TODO,\r\n  id: id\r\n})","import React ,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addTodo} from '../actions.js';\r\n\r\n\r\nclass AddTodo extends Component{\r\n\r\n  onSubmit = (event)=>{\r\n    event.preventDefault();\r\n    \r\n    const input = this.input;\r\n    if(!input.value.trim()){\r\n      return;\r\n    }\r\n    this.props.onAdd(input.value);\r\n    input.value='';\r\n  }\r\n//ref属性可以设置为一个回调函数\r\n//组件被挂载后，回调函数被立即执行，回调函数的参数为该组件的具体实例。\r\n  refInput = (node)=>{\r\n    this.input = node;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"add-todo\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <input className=\"new-todo\" placeholder=\"add one new to-do\" ref={this.refInput}/>\r\n          <button className=\"add-btn\" type=\"submit\">add</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//调用dispatch用于派发action对象\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return ({\r\n    onAdd: (text)=>{\r\n      dispatch(addTodo(text));\r\n    }\r\n  })\r\n}\r\n\r\n\r\nAddTodo.propTypes = {\r\n  onAdd: PropTypes.func.isRequired\r\n};\r\nexport default connect(null,mapDispatchToProps)(AddTodo);\r\n\r\n\r\n ","const ADD_TODO = 'TODO/ADD';\r\nconst TOGGLE_TODO = 'TODO/TOGGLE';\r\nconst REMOVE_TODO = 'TODO/REMOVE';\r\n\r\nexport {ADD_TODO,TOGGLE_TODO,REMOVE_TODO};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoItem = (props)=>{\r\n  return (\r\n    <li className=\"todo-item\" style={{textDecoration: props.completed?'line-through':'none'}}>\r\n      <input className=\"toggle\" type=\"checkbox\" onClick={props.onToggle}/>\r\n      <span className=\"text\">{props.text}</span>\r\n      <button className=\"remove\" onClick={props.onRemove}>x</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  onToggle:PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default TodoItem;","export const FilterTypes = {\r\n  ALL: '全部',\r\n  COMPLETED: '已完成',\r\n  UNCOMPLETED: '未完成'\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport TodoItem from './todoItem.js';\r\nimport {toggleTodo, removeTodo} from '../actions.js';\r\nimport {FilterTypes} from '../../constants.js';\r\n\r\n\r\n//对于动态数量的子组件，每个子组件需要带上可标示这个子组件的key属性，其值唯一\r\nconst TodoList = (props)=>{\r\n  return (\r\n    <ul className=\"todo-list\">\r\n    {\r\n      props.todos.map((item)=>(\r\n        <TodoItem\r\n          key={item.id}\r\n          text={item.text}\r\n          completed={item.completed}\r\n          onToggle={() => props.onToggleTodo(item.id)}\r\n          onRemove={() => props.onRemoveTodo(item.id)}\r\n        />\r\n      ))\r\n    }\r\n    </ul>\r\n  )\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.array.isRequired\r\n};\r\n\r\n\r\n//根据filterType返回对应的todos\r\nconst selectTodos = (todos,filterType)=>{\r\n  switch(filterType){\r\n    case FilterTypes.ALL:\r\n      return todos;\r\n    case FilterTypes.COMPLETED:\r\n      return todos.filter(item=>item.completed);\r\n    case FilterTypes.UNCOMPLETED:\r\n      return todos.filter(item=> !item.completed);\r\n    default:\r\n      throw new Error('unsupported filter');\r\n  }\r\n}\r\n\r\n\r\n//取出state中要使用的todos作为props.todos\r\nconst mapStateToProps = (state)=>{\r\n  return {\r\n    todos:selectTodos(state.todos,state.filter)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n    onToggleTodo: (id)=>{\r\n      dispatch(toggleTodo(id));\r\n    },\r\n    onRemoveTodo: (id)=>{\r\n      dispatch(removeTodo(id));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoList);","import React from 'react';\r\nimport AddTodo from './addTodo.js'\r\nimport TodoList from './todoList.js'\r\n\r\nimport './style.css'\r\n\r\nexport default ()=>{\r\n  return (\r\n    <div >\r\n      <AddTodo/>\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {setFilter} from '../actions.js';\r\n\r\nconst Link = (props)=>{\r\n  if(props.active){\r\n    return <button className=\"filter selected\">{props.children}</button>\r\n  }else{\r\n    return (\r\n      <button className=\"filter\" onClick={(e)=>{\r\n        e.preventDefault();\r\n        props.onClick();\r\n      }}>{props.children}</button>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = (state,ownProps)=>{\r\n  return {\r\n    active: state.filter === ownProps.filter\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps)=>{\r\n  return {\r\n    onClick: ()=>{\r\n      dispatch(setFilter(ownProps.filter))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);","import {SET_FILTER} from './actionTypes.js';\r\n\r\nexport const setFilter = filterType => ({\r\n  type: SET_FILTER,\r\n  filter: filterType\r\n});","export const SET_FILTER = 'FILTER/SET';","import React from 'react';\r\nimport Link from './link.js';\r\nimport {FilterTypes} from '../../constants.js';\r\n\r\nimport './style.css'\r\nconst Filters = ()=>{\r\n  return (\r\n    <div className=\"filters\">\r\n      <Link filter={FilterTypes.ALL}>{FilterTypes.ALL}</Link>\r\n      <Link filter={FilterTypes.COMPLETED}>{FilterTypes.COMPLETED}</Link>\r\n      <Link filter={FilterTypes.UNCOMPLETED}>{FilterTypes.UNCOMPLETED}</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filters;\r\n\r\n","import React, { Component } from 'react';\nimport {view as Todos} from './todos/'\nimport {view as Filter} from './filter/'\n\n\nclass TodoApp extends Component {\n  render() {\n    return (\n      <div>\n        <Todos/>\n        <Filter />\n      </div>\n    );\n  }\n}\n\nexport default TodoApp;\n","/** \r\n * -----store状态树-----\r\n * {\r\n *  todos:[\r\n *    {\r\n *      text:'aaa',\r\n *      completed: false,\r\n *      id:0\r\n *    },\r\n *    {\r\n *      text:'bbb',\r\n *      completed: true,\r\n *      id:1\r\n *    }\r\n *  ],\r\n *  filter:'全部'\r\n * }\r\n*/\r\n\r\nimport {createStore, combineReducers} from 'redux';\r\n\r\nimport {reducer as todoReducer} from './todos';\r\nimport {reducer as filterReducer} from './filter';\r\n\r\nconst reducer = combineReducers({\r\n  todos: todoReducer,\r\n  filter: filterReducer\r\n});\r\n\r\nexport default createStore(reducer);\r\n\r\n","/**\r\n * todos用到的state为很多个todo的对象，包含有text,id,completed属性\r\n * reducer的操作是根据dispatch的action设置todos这个集合\r\n */\r\n\r\nimport * as ActionTypes from './actionTypes.js';\r\n\r\nexport default (state=[],action)=>{\r\n  switch(action.type){\r\n    case ActionTypes.ADD_TODO:{\r\n      return [...state,{\r\n        id: action.id,\r\n        text: action.text,\r\n        completed: false\r\n      }]\r\n    }\r\n    case ActionTypes.TOGGLE_TODO:{\r\n      return state.map((item)=>{\r\n        console.log(item,action.id);\r\n        if(item.id === action.id){\r\n          return {...item,completed:!item.completed};\r\n        }else{\r\n          return item;\r\n        }\r\n      })\r\n    }\r\n    case ActionTypes.REMOVE_TODO:{\r\n      return state.filter((item)=>{\r\n        return item.id !== action.id;\r\n      })\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","/**\r\n * filter用到的state仅有filterType\r\n * reducer的操作是根据dispatch的action设置state\r\n */\r\n\r\nimport {SET_FILTER} from './actionTypes.js';\r\nimport {FilterTypes} from '../constants.js'\r\n\r\nexport default (state = FilterTypes.ALL, action) => {\r\n  switch(action.type) {\r\n    case SET_FILTER: {\r\n      return action.filter;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport TodoApp from './TodoApp';\nimport store from './Store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>, \n  document.getElementById('root'));\n\n\n"],"sourceRoot":""}